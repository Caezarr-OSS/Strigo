name: Release

on:
  push:
    tags:
      - "*"   # change to 'v*' if you want to enforce a 'v' prefix

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: strigo
  CGO_ENABLED: "0"

jobs:
  build-and-release:
    name: ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # keep full history for tag checks and changelog

      - name: Ensure tag commit is reachable from main
        shell: bash
        run: |
          git fetch --no-tags --prune origin +refs/heads/main:refs/remotes/origin/main
          if ! git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
            echo "❌ The tag must point to a commit that is contained in 'main'."
            exit 1
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.x"

      - name: Pre-fetch modules
        run: go mod download

      - name: Build binaries (${{ matrix.goos }}/${{ matrix.goarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          set -euo pipefail
          OUTDIR=dist
          mkdir -p "$OUTDIR"
          SUFFIX="${GOOS}-${GOARCH}"
          BIN="${APP_NAME}-${SUFFIX}"
          go build -trimpath -ldflags="-s -w" -o "${BIN}" .
          TAR="${OUTDIR}/${APP_NAME}_${SUFFIX}.tar.gz"
          tar -czf "${TAR}" "${BIN}"
          rm -f "${BIN}"

      - name: Generate checksums (SHA-256)
        run: |
          set -euo pipefail
          (cd dist && sha256sum *.tar.gz > checksums.txt)

      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: dist
          upload-artifact: false
          format: cyclonedx-json
          output-file: sbom.json

      # ---- Stable git-chglog + preflight diagnostics ----
      - name: Install git-chglog (v0.15.4 stable)
        run: |
          set -euo pipefail
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"

      - name: Changelog preflight
        env:
          TAG: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          echo "git-chglog version:"
          git-chglog --version || true
          echo "Resolved tag: $TAG"
          echo "Local tags (last 20):"
          git tag --sort=-creatordate | head -n 20
          echo "Does $TAG exist locally?"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "Yes, tag exists locally."
          else
            echo "No, tag not found locally (this would be unusual on a tag push)."
          fi

      - name: Generate CHANGELOG for this tag (existing tag mode)
        env:
          TAG: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          if [ -f .chglog/config.yml ]; then
            # Render the entry for the EXISTING tag (no --next-tag here)
            git-chglog --config .chglog/config.yml "$TAG" > CHANGELOG.md
          else
            echo "NOTE: .chglog/config.yml not found. Skipping git-chglog." > CHANGELOG.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          files: |
            dist/*.tar.gz
            dist/checksums.txt
            sbom.json
            CHANGELOG.md
          generate_release_notes: false
