name: Release

on:
  push:
    tags:
      - "*"   # Mets 'v*' si tu veux forcer un préfixe v

permissions:
  contents: write
  # id-token: write  # décommente si tu ajoutes Cosign keyless plus tard

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: strigo
  CGO_ENABLED: "0"

jobs:
  build-and-release:
    name: ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # requis pour vérif 'tag ∈ main' & changelog

      - name: Ensure tag commit is reachable from main
        shell: bash
        run: |
          git fetch origin main --depth=1
          if ! git branch -r --contains "$GITHUB_SHA" | grep -q "origin/main"; then
            echo "❌ Le tag doit pointer vers un commit contenu dans 'main'."
            exit 1
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.x"

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binaries (${{ matrix.goos }}/${{ matrix.goarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTDIR=dist
          mkdir -p "$OUTDIR"
          SUFFIX="${GOOS}-${GOARCH}"
          BIN="${APP_NAME}-${SUFFIX}"
          # Si tu as une Task 'release', tu peux l'appeler ici. Sinon :
          go build -ldflags="-s -w" -o "${BIN}" ./...
          TAR="${OUTDIR}/${APP_NAME}_${SUFFIX}.tar.gz"
          tar -czf "${TAR}" "${BIN}"
          rm -f "${BIN}"

      - name: Generate checksums
        run: |
          (cd dist && shasum -a 256 *.tar.gz > checksums.txt)

      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: dist
          upload-artifact: false
          format: cyclonedx-json
          output-file: sbom.json

      - name: Install git-chglog
        run: |
          curl -sSL https://github.com/git-chglog/git-chglog/releases/latest/download/git-chglog_linux_amd64.tar.gz \
            | tar -xz -C /usr/local/bin git-chglog
          chmod +x /usr/local/bin/git-chglog

      - name: Generate CHANGELOG for this tag
        env:
          TAG: ${{ github.ref_name }}
        run: |
          git-chglog --config .chglog/config.yml --tag "$TAG" > CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          files: |
            dist/*.tar.gz
            dist/checksums.txt
            sbom.json
            CHANGELOG.md
          generate_release_notes: false
