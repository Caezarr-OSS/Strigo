name: Release

on:
  push:
    tags:
      - '*'  # Accept any tag
  pull_request:
    branches:
      - main  # Test release process on PRs to main
    types: [labeled]

permissions:
  contents: write # Required for creating releases

jobs:
  release:
    # Only run if it's a tag push or if PR is labeled with 'test-release'
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.label.name == 'test-release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for GoReleaser

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install git-chglog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest

      - name: Generate Changelog
        run: |
          git-chglog -o CHANGELOG.md

      - name: Build Release Binaries
        run: task release

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: cyclonedx-json
          output: bin/sbom.json

      # For actual releases (tag pushes)
      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            bin/*.tar.gz
            bin/checksums.txt
            bin/sbom.json
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # For testing releases (PRs with test-release label)
      - name: Test Release Process
        if: github.event_name == 'pull_request'
        run: |
          echo "üîç Testing release process..."
          echo "‚úì Changelog generated"
          echo "‚úì Binaries built"
          echo "‚úì SBOM generated"
          echo "‚úì Release assets prepared:"
          ls -l bin/
          echo "‚úì Release process test completed successfully"
          
      - name: Upload Test Artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: release-test-artifacts
          path: |
            bin/
            CHANGELOG.md
          retention-days: 5
